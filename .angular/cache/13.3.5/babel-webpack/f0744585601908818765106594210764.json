{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Desktop\\\\werk\\\\calorie-calc\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { WeekControlComponent } from './week-control.component';\nimport { StoreModule } from \"@ngrx/store\";\nimport { RouterTestingModule } from \"@angular/router/testing\";\ndescribe('WeekControlComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [WeekControlComponent],\n      imports: [StoreModule.forRoot({}), RouterTestingModule]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(WeekControlComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should mark day as active', () => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    expect(component.isDayActive(today)).toEqual(true);\n  });\n  it('shouldn\\'t mark day as active', () => {\n    const yesterday = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1);\n    yesterday.setHours(0, 0, 0, 0);\n    expect(component.isDayActive(yesterday)).toEqual(false);\n  });\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/werk/calorie-calc/src/app/calendar/callendar-grid/week-control/week-control.component.spec.ts"],"names":["TestBed","WeekControlComponent","StoreModule","RouterTestingModule","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","forRoot","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","today","Date","setHours","isDayActive","toEqual","yesterday","getFullYear","getMonth","getDate"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACnC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMP,OAAO,CAACQ,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACR,oBAAD,CADmB;AAEjCS,MAAAA,OAAO,EAAE,CAACR,WAAW,CAACS,OAAZ,CAAoB,EAApB,CAAD,EAA0BR,mBAA1B;AAFwB,KAA/B,EAIDS,iBAJC,EAAN;AAKH,GANS,EAAV;AAOAL,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGN,OAAO,CAACa,eAAR,CAAwBZ,oBAAxB,CAAV;AACAI,IAAAA,SAAS,GAAGC,OAAO,CAACQ,iBAApB;AACAR,IAAAA,OAAO,CAACS,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACZ,SAAD,CAAN,CAAkBa,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,2BAAD,EAA8B,MAAM;AAClC,UAAMG,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACAD,IAAAA,KAAK,CAACE,QAAN,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB;AACAJ,IAAAA,MAAM,CAACZ,SAAS,CAACiB,WAAV,CAAsBH,KAAtB,CAAD,CAAN,CAAqCI,OAArC,CAA6C,IAA7C;AACH,GAJC,CAAF;AAKAP,EAAAA,EAAE,CAAC,+BAAD,EAAkC,MAAM;AACtC,UAAMQ,SAAS,GAAG,IAAIJ,IAAJ,CAAS,IAAIA,IAAJ,GAAWK,WAAX,EAAT,EAAmC,IAAIL,IAAJ,GAAWM,QAAX,EAAnC,EAA0D,IAAIN,IAAJ,GAAWO,OAAX,KAAuB,CAAjF,CAAlB;AACAH,IAAAA,SAAS,CAACH,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B;AACAJ,IAAAA,MAAM,CAACZ,SAAS,CAACiB,WAAV,CAAsBE,SAAtB,CAAD,CAAN,CAAyCD,OAAzC,CAAiD,KAAjD;AACH,GAJC,CAAF;AAKH,CA5BO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { WeekControlComponent } from './week-control.component';\r\nimport { StoreModule } from \"@ngrx/store\";\r\nimport { RouterTestingModule } from \"@angular/router/testing\";\r\ndescribe('WeekControlComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [WeekControlComponent,],\r\n            imports: [StoreModule.forRoot({}), RouterTestingModule]\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(WeekControlComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('should mark day as active', () => {\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n        expect(component.isDayActive(today)).toEqual(true);\r\n    });\r\n    it('shouldn\\'t mark day as active', () => {\r\n        const yesterday = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - 1);\r\n        yesterday.setHours(0, 0, 0, 0);\r\n        expect(component.isDayActive(yesterday)).toEqual(false);\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}