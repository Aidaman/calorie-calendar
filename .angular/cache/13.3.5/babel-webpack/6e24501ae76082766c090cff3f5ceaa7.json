{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\User\\\\Desktop\\\\werk\\\\calorie-calc\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { UserProfileComponent } from './user-profile.component';\nimport { RouterTestingModule } from \"@angular/router/testing\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { StoreModule } from \"@ngrx/store\";\ndescribe('UserProfileComponent', () => {\n  let component;\n  let fixture;\n  beforeEach( /*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [UserProfileComponent],\n      imports: [RouterTestingModule, ReactiveFormsModule, StoreModule.forRoot({})]\n    }).compileComponents();\n  }));\n  beforeEach(() => {\n    fixture = TestBed.createComponent(UserProfileComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n  it('calculation for male worked correctly', () => {\n    //test CalculateBMR function (for male)\n    //weight-height = 60-175\n    //min-max kcal = 1590-2090\n    //fats-carbohydrates-proteins = 53, 29.81, 59.63\n    expect(component.calculateBMR(60, 175, 25, 'male')).toEqual();\n  });\n  it('calculation for female worked correctly', () => {\n    //test CalculateBMR function (for female)\n    //weight-height = 60-175\n    //min-max kcal = 1436-1936\n    //fats-carbohydrates-proteins = 47.87, 53.85, 26.93\n    expect(component).toBeTruthy();\n  });\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/werk/calorie-calc/src/app/Forms/user-profile/user-profile.component.spec.ts"],"names":["TestBed","UserProfileComponent","RouterTestingModule","ReactiveFormsModule","StoreModule","describe","component","fixture","beforeEach","configureTestingModule","declarations","imports","forRoot","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","calculateBMR","toEqual"],"mappings":";AAAA,SAASA,OAAT,QAAwB,uBAAxB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACAC,QAAQ,CAAC,sBAAD,EAAyB,MAAM;AACnC,MAAIC,SAAJ;AACA,MAAIC,OAAJ;AACAC,EAAAA,UAAU,iCAAC,aAAY;AACnB,UAAMR,OAAO,CAACS,sBAAR,CAA+B;AACjCC,MAAAA,YAAY,EAAE,CAACT,oBAAD,CADmB;AAEjCU,MAAAA,OAAO,EAAE,CAACT,mBAAD,EAAsBC,mBAAtB,EAA2CC,WAAW,CAACQ,OAAZ,CAAoB,EAApB,CAA3C;AAFwB,KAA/B,EAIDC,iBAJC,EAAN;AAKH,GANS,EAAV;AAOAL,EAAAA,UAAU,CAAC,MAAM;AACbD,IAAAA,OAAO,GAAGP,OAAO,CAACc,eAAR,CAAwBb,oBAAxB,CAAV;AACAK,IAAAA,SAAS,GAAGC,OAAO,CAACQ,iBAApB;AACAR,IAAAA,OAAO,CAACS,aAAR;AACH,GAJS,CAAV;AAKAC,EAAAA,EAAE,CAAC,eAAD,EAAkB,MAAM;AACtBC,IAAAA,MAAM,CAACZ,SAAD,CAAN,CAAkBa,UAAlB;AACH,GAFC,CAAF;AAGAF,EAAAA,EAAE,CAAC,uCAAD,EAA0C,MAAM;AAC9C;AACA;AACA;AACA;AACAC,IAAAA,MAAM,CAACZ,SAAS,CAACc,YAAV,CAAuB,EAAvB,EAA2B,GAA3B,EAAgC,EAAhC,EAAoC,MAApC,CAAD,CAAN,CAAoDC,OAApD;AACH,GANC,CAAF;AAOAJ,EAAAA,EAAE,CAAC,yCAAD,EAA4C,MAAM;AAChD;AACA;AACA;AACA;AACAC,IAAAA,MAAM,CAACZ,SAAD,CAAN,CAAkBa,UAAlB;AACH,GANC,CAAF;AAOH,CAhCO,CAAR","sourcesContent":["import { TestBed } from '@angular/core/testing';\r\nimport { UserProfileComponent } from './user-profile.component';\r\nimport { RouterTestingModule } from \"@angular/router/testing\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { StoreModule } from \"@ngrx/store\";\r\ndescribe('UserProfileComponent', () => {\r\n    let component;\r\n    let fixture;\r\n    beforeEach(async () => {\r\n        await TestBed.configureTestingModule({\r\n            declarations: [UserProfileComponent],\r\n            imports: [RouterTestingModule, ReactiveFormsModule, StoreModule.forRoot({})],\r\n        })\r\n            .compileComponents();\r\n    });\r\n    beforeEach(() => {\r\n        fixture = TestBed.createComponent(UserProfileComponent);\r\n        component = fixture.componentInstance;\r\n        fixture.detectChanges();\r\n    });\r\n    it('should create', () => {\r\n        expect(component).toBeTruthy();\r\n    });\r\n    it('calculation for male worked correctly', () => {\r\n        //test CalculateBMR function (for male)\r\n        //weight-height = 60-175\r\n        //min-max kcal = 1590-2090\r\n        //fats-carbohydrates-proteins = 53, 29.81, 59.63\r\n        expect(component.calculateBMR(60, 175, 25, 'male')).toEqual();\r\n    });\r\n    it('calculation for female worked correctly', () => {\r\n        //test CalculateBMR function (for female)\r\n        //weight-height = 60-175\r\n        //min-max kcal = 1436-1936\r\n        //fats-carbohydrates-proteins = 47.87, 53.85, 26.93\r\n        expect(component).toBeTruthy();\r\n    });\r\n});\r\n"]},"metadata":{},"sourceType":"module"}